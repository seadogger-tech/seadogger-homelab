apiVersion: v1
kind: ServiceAccount
metadata:
  name: backup-manager
  namespace: portal
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: backup-manager
rules:
- apiGroups: ["k8up.io"]
  resources: ["snapshots", "restores"]
  verbs: ["get", "list", "create", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments", "deployments/scale"]
  verbs: ["get", "list", "patch"]
- apiGroups: ["argoproj.io"]
  resources: ["applications"]
  verbs: ["get", "patch"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: backup-manager
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: backup-manager
subjects:
- kind: ServiceAccount
  name: backup-manager
  namespace: portal
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backup-manager
  namespace: portal
  labels:
    app: backup-manager
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backup-manager
  template:
    metadata:
      labels:
        app: backup-manager
    spec:
      serviceAccountName: backup-manager
      containers:
      - name: app
        image: ghcr.io/seadogger-tech/seadogger-homelab/backup-manager:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
---
apiVersion: v1
kind: Service
metadata:
  name: backup-manager
  namespace: portal
spec:
  selector:
    app: backup-manager
  ports:
  - port: 80
    targetPort: 8080
