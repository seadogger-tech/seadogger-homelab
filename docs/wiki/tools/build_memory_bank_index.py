
import os, re, pathlib
MB = pathlib.Path("docs/wiki/memory_bank")
OUT = pathlib.Path("docs/wiki/14-Memory-Bank-Index.md")
def tags_for(text):
    t = text.lower(); tags=[]
    if any(k in t for k in ["ceph","rbd","cephfs","osd","mds","storageclass","erasure"]): tags.append("Storage")
    if any(k in t for k in ["metallb","traefik","ingress","dns","pihole"]): tags.append("Networking")
    if any(k in t for k in ["argocd","helm","ansible","iac","gitops","cleanup","wipe"]): tags.append("GitOps/IaC")
    if any(k in t for k in ["cert","tls","ca","acme","keycloak","oauth2-proxy"]): tags.append("Security/Certs")
    if any(k in t for k in ["prometheus","grafana","alertmanager","observability"]): tags.append("Observability")
    if any(k in t for k in ["plex","n8n","openwebui","bedrock"]): tags.append("Apps")
    return sorted(set(tags)) or ["Misc"]
def date_from_name(name):
    m = re.match(r"(20\d{2}-\d{2}-\d{2})", name); return m.group(1) if m else ""
rows=[]
if MB.exists():
    for p in sorted(MB.glob("*.md")):
        text=p.read_text(encoding="utf-8", errors="ignore")
        title=text.splitlines()[0].strip("# ").strip() if text.startswith("#") else p.stem.replace("-", " ")
        rows.append((date_from_name(p.name) or "", title, p.name, ", ".join(tags_for(text))))
rows.sort(key=lambda r:(r[0] or "9999-12-31", r[2]), reverse=True)
OUT.parent.mkdir(parents=True, exist_ok=True)
with OUT.open("w", encoding="utf-8") as f:
    f.write("# Memory Bank Index\n\n_Auto-generated by CI from `docs/wiki/memory_bank/*.md`._\n\n")
    f.write("| Date | Title | File | Tags |\n|---|---|---|---|\n")
    for date, title, name, tags in rows:
        f.write(f"| {date or '-'} | [{title}](memory_bank/{name}) | `{name}` | {tags} |\n")
print(f"Wrote {OUT}")
