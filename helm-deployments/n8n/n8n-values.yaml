# n8n values for community-charts/n8n v1.13.5

image:
  repository: n8nio/n8n
  pullPolicy: IfNotPresent


# Use Postgres (bundled subchart) instead of sqlite
db:
  type: postgresdb

postgresql:
  enabled: true
  auth:
    username: n8n
    password: n8npass
    database: n8n
  primary:
    persistence:
      enabled: true
      # existingClaim: ""   # (optional) bind to an existing PVC
      # NOTE: this wrapper schema exposes only 'enabled' and 'existingClaim'.
      # If you want to tune storage size/class, prefer setting a StorageClass default
      # or create a PVC and set existingClaim above.

main:
  count: 1

  # Persist ~/.n8n on Ceph
  persistence:
    enabled: true
    storageClass: "ceph-block-data"
    accessMode: ReadWriteOnce
    size: 50Gi
    mountPath: "/home/node/.n8n"
    annotations:
      helm.sh/resource-policy: keep

  # Mount TLS cert from a secret in the SAME namespace as the release (n8n)
  volumes:
    - name: n8n-ssl
      secret:
        secretName: n8n-local-tls
  volumeMounts:
    - name: n8n-ssl
      mountPath: /etc/n8n/tls.crt
      subPath: tls.crt
      readOnly: true
    - name: n8n-ssl
      mountPath: /etc/n8n/tls.key
      subPath: tls.key
      readOnly: true

  # App-level HTTPS config
  extraEnvVars:
    N8N_PROTOCOL: "https"
    N8N_PORT: "5678"
    N8N_SSL_CERT: "/etc/n8n/tls.crt"
    N8N_SSL_KEY: "/etc/n8n/tls.key"
    N8N_SECURE_COOKIE: "false"
    NODE_ENV: "production"
    N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS: "true"
    GENERIC_TIMEZONE: "America/New_York"
    N8N_DEFAULT_LOCALE: "en"

# If you prefer TLS at the edge, you can enable an ingress instead of app-level TLS:
# ingress:
#   enabled: true
#   className: "traefik"   # or your ingress class
#   hosts:
#     - host: n8n.local
#       paths:
#         - path: /
#           pathType: Prefix
#   tls:
#     - secretName: n8n-local-tls
#       hosts: [ "n8n.local" ]
