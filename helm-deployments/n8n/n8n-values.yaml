service:
  enabled: true
  type: LoadBalancer
  port: 5678
  name: https
  annotations:
    metallb.universe.tf/address-pool: default
    metallb.universe.tf/allow-shared-ip: n8n
    metallb.universe.tf/loadBalancerIPs: "192.168.1.252"
  labels:
    app: n8n

main:
  persistence:
    enabled: true
    storageClass: ceph-block-data
    size: 50Gi

  volumes:
    - name: n8n-ssl
      secret:
        secretName: n8n-local-tls
  volumeMounts:
    - name: n8n-ssl
      mountPath: /etc/n8n/tls.crt
      subPath: tls.crt
      readOnly: true
    - name: n8n-ssl
      mountPath: /etc/n8n/tls.key
      subPath: tls.key
      readOnly: true

  extraEnvVars:
    N8N_PROTOCOL: "https"
    N8N_PORT: "5678"
    N8N_SSL_CERT: "/etc/n8n/tls.crt"
    N8N_SSL_KEY: "/etc/n8n/tls.key"
    N8N_SECURE_COOKIE: "false"
    NODE_ENV: "production"
    N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS: "true"
    GENERIC_TIMEZONE: "America/New_York"
    N8N_DEFAULT_LOCALE: "en"
    N8N_HIRING_BANNER_ENABLED: "false"
    N8N_GRACEFUL_SHUTDOWN_TIMEOUT: "30"

  # -- This is to setup the liveness probe for the main pod more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
  livenessProbe:
    httpGet:
      path: /healthz
      port: https

  # -- This is to setup the readiness probe for the main pod more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
  readinessProbe:
    httpGet:
      path: /healthz/readiness
      port: https

# -- Worker node configurations
worker:
  # -- This is to setup the liveness probe for the worker pod more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
  livenessProbe:
    httpGet:
      path: /healthz
      port: https

  # -- This is to setup the readiness probe for the worker pod more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
  readinessProbe:
    httpGet:
      path: /healthz/readiness
      port: https

# -- Webhook node configurations
webhook:
  # -- MCP webhook configuration. This is only used when the webhook mode is set to `queue` and the database type is set to `postgresdb`.
  mcp:
    # -- Whether to enable MCP webhook
    enabled: false
  # -- This block is for setting up the resource management for the webhook pod more information can be found here: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
  # -- This is to setup the liveness probe for the webhook pod more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
  livenessProbe:
    httpGet:
      path: /healthz
      port: https

  # -- This is to setup the readiness probe for the webhook pod more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
  readinessProbe:
    httpGet:
      path: /healthz/readiness
      port: https