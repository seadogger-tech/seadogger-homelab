---
ipv4_subnet_prefix: "192.168.1"
ipv4_gateway: "192.168.1.1"
dns4_servers: "{{ ipv4_gateway }}"
active_internet_interface: "eth0"

# --- Cold Start Master Switches ---
# These switches now control two separate playbooks: `main.yml` for installation and `cleanup.yml` for teardown.

# --- STAGE 1: WIPE (cleanup.yml) ---
# Set to true to authorize the `cleanup.yml` playbook to run its final, destructive stage of wiping k3s.
# This has NO EFFECT on `main.yml`.
cold_start_stage_1_wipe_cluster: true

# --- STAGE 2: INSTALL INFRASTRUCTURE (main.yml) ---
# Set to true to run the infrastructure installation tasks in `main.yml`.
cold_start_stage_2_install_infrastructure: true

# --- STAGE 3: INSTALL APPLICATIONS (main.yml) ---
# Set to true to run the application deployment tasks in `main.yml`.
cold_start_stage_3_install_applications: true

# --- Manual Install Toggles ---
# Use these flags to deploy services individually when the Stage 3 master switch is false.
manual_install_bedrock: true
manual_install_pihole: true
manual_install_prometheus: true
manual_install_openwebui: true
manual_install_n8n: true
manual_install_nextcloud: true
manual_install_jellyfin: true

# --- Secrets ---
dashboard_password: "YourSecurePasswordHere"
aws_bedrock_api_key_id: "YOUR_AWS_ACCESS_KEY_ID_HERE"
aws_bedrock_api_access_key: "YOUR_AWS_SECRET_ACCESS_KEY_HERE"
xmltv_stream: "https://api.hdhomerun.com/api/xmltv?DeviceAuth=YOUR_HDHOMERUN_ACCESS_KEY"

# ==============================================================================
# --- Granular Cleanup Configuration ---
# ==============================================================================
#
# USAGE INSTRUCTIONS:
#
# This section controls the NEW `cleanup.yml` playbook (`ansible-playbook cleanup.yml`).
# It allows for the targeted, graceful removal of applications and infrastructure.
# It is SEPARATE from the `main.yml` deployment playbook.
#
# --- COMMON PATTERNS ---
#
# 1. To Remove a SINGLE POD (e.g., plex):
#    - Set `run_pod_cleanup: true`
#    - In `pod_cleanup_list`, ensure only the `plex` entry is present or uncommented.
#    - Set `delete_pvc: false` for plex to keep its data.
#
# 2. To Remove a SINGLE POD AND ITS DATA (e.g., pihole):
#    - Set `run_pod_cleanup: true`
#    - In `pod_cleanup_list`, ensure only the `pihole` entry is present.
#    - Set `delete_pvc: true` for pihole.
#
# 3. To Remove ALL PODS:
#    - Set `run_pod_cleanup: true`
#    - Ensure all desired applications are listed in `pod_cleanup_list`.
#
# 4. To Remove Prometheus (including its CRDs):
#    - Set `run_prometheus_cleanup: true`
#
# 5. To Remove Infrastructure (e.g., MetalLB only):
#    - Set `run_infrastructure_cleanup: true`
#    - Set `infrastructure_cleanup_list: ["metallb"]`
#
# 6. To Wipe Everything (COLD START):
#    - Set `cold_start_stage_1_wipe_cluster: true` below.
#    - Then run the `ansible-playbook cleanup.yml` command. This will trigger
#      the full, ordered teardown of all applications and infrastructure before
#      wiping the k3s cluster itself.
#
# SAFETY: The `main.yml` playbook can NO LONGER perform any destructive actions.
# All teardown operations MUST be initiated via `cleanup.yml`.
# Physical disk wiping is still protected by the separate `perform_physical_disk_wipe` flag.

# --- POD / APPLICATION CLEANUP ---
run_pod_cleanup: true
pod_cleanup_list:
  - { name: "bedrock-access-gateway", namespace: "bedrock-gateway", selector: "app=bedrock-access-gateway", delete_pvc: true }
  - { name: "pihole", namespace: "pihole", selector: "app.kubernetes.io/name=pihole", delete_pvc: true }
  - { name: "openwebui", namespace: "openwebui", selector: "app.kubernetes.io/instance=openwebui", delete_pvc: true }
  - { name: "n8n", namespace: "n8n", selector: "app.kubernetes.io/instance=n8n", delete_pvc: true }
  - { name: "nextcloud", namespace: "nextcloud", selector: "app=nextcloud", delete_pvc: true }
  - { name: "jellyfin", namespace: "jellyfin", selector: "app=jellyfin", delete_pvc: true }

# --- INFRASTRUCTURE CLEANUP ---
run_infrastructure_cleanup: false
infrastructure_cleanup_list:
  - "prometheus"
  - "argocd"
  - "metallb"
  - "rook-ceph" # Note: This does NOT wipe physical disks.

# --- Namespace Pre-cooking Configuration ---
precook_namespaces:
  - { name: "openwebui" }
  - { name: "monitoring" }
  - { name: "argocd" }
  - { name: "rook-ceph" }
  - { name: "pihole" }
  - { name: "n8n" }
  - { name: "bedrock-gateway" }
  - { name: "nextcloud" }
  - { name: "jellyfin" }


# ===================================================================================
# --- Ansible Playbook Variables (GENERATED FROM THE SWITCHES ABOVE) ---
# ===================================================================================

# --- Stage 1: Wipe Cluster Variables (DESTRUCTIVE) ---
# This variable is now ONLY used by cleanup.yml to trigger the final wipe stage.
enable_wipe_k3s_cluster: "{{ cold_start_stage_1_wipe_cluster | bool }}"
# DANGER: This flag enables the wiping of physical storage devices on the nodes.
# It should ONLY be used during a full, intentional cold start of the cluster.
perform_physical_disk_wipe: true

# --- Stage 2: Infrastructure Installation Variables ---
enable_raspberry_pi_config: "{{ cold_start_stage_2_install_infrastructure | bool }}"
update_rpi_firmware: "{{ cold_start_stage_2_install_infrastructure | bool }}"
enable_k3s_control_plane: "{{ cold_start_stage_2_install_infrastructure | bool }}"
enable_k3s_workers: "{{ cold_start_stage_2_install_infrastructure | bool }}"
enable_rook_ceph_part1: "{{ cold_start_stage_2_install_infrastructure | bool }}"
enable_metallb_native: "{{ cold_start_stage_2_install_infrastructure | bool }}"
enable_argocd_native: "{{ cold_start_stage_2_install_infrastructure | bool }}"
enable_internal_pki: "{{ cold_start_stage_2_install_infrastructure | bool }}"
enable_prometheus: "{{ cold_start_stage_2_install_applications | bool and manual_install_prometheus | bool }}"

# --- Stage 3: Application Deployment Variables ---
# An application is enabled if the STAGE 3 master switch is ON, AND if its individual MANUAL switch is ON.
enable_bedrock: "{{ cold_start_stage_3_install_applications | bool and manual_install_bedrock | bool }}"
enable_pihole: "{{ cold_start_stage_3_install_applications | bool and manual_install_pihole | bool }}"
enable_openwebui: "{{ cold_start_stage_3_install_applications | bool and manual_install_openwebui | bool }}"
enable_n8n: "{{ cold_start_stage_3_install_applications | bool and manual_install_n8n | bool }}"
enable_nextcloud: "{{ cold_start_stage_3_install_applications | bool and manual_install_nextcloud | bool }}"
enable_jellyfin: "{{ cold_start_stage_3_install_applications | bool and manual_install_jellyfin | bool }}"