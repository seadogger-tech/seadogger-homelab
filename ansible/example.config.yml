---
ipv4_subnet_prefix: "192.168.1"
ipv4_gateway: "192.168.1.1"
dns4_servers: "{{ ipv4_gateway }}"
active_internet_interface: "eth0"

# --- Cold Start Master Switches ---
# STAGE 1: Set to true to run all DESTRUCTIVE wipe tasks.
cold_start_stage_1_wipe_cluster: false
# STAGE 2: Set to true to install the core infrastructure (k3s, Ceph, etc.).
cold_start_stage_2_install_infrastructure: false
# STAGE 3: Set to true to deploy all applications and services.
cold_start_stage_3_install_applications: false

# --- Manual Install Toggles ---
# Use these flags to deploy services individually when the Stage 3 master switch is false.
manual_install_argocd: false
manual_install_metallb: false
manual_install_argocd_svc: false
manual_install_rook_ceph_part2: false
manual_install_nfs_server: false
manual_install_bedrock: false
manual_install_pihole: false
manual_install_prometheus: false
manual_install_openwebui: false
manual_install_n8n: false
manual_install_plex: false

# --- Secrets ---
aws_bedrock_api_key_id: "YOUR_AWS_ACCESS_KEY_ID_HERE"
aws_bedrock_api_access_key: "YOUR_AWS_SECRET_ACCESS_KEY_HERE"
plex_access_key: "YOUR_PLEX_CLAIM_TOKEN_HERE" # This key is only good for 5 minutes. You get this from https://plex.tv/claim

# ===================================================================================
# --- Ansible Playbook Variables (GENERATED FROM THE SWITCHES ABOVE) ---
# ===================================================================================

# --- Stage 1: Wipe Cluster Variables (DESTRUCTIVE) ---
enable_wipe_k3s_cluster: "{{ cold_start_stage_1_wipe_cluster | bool }}"
wipe_ceph_disks_on_install: "{{ cold_start_stage_1_wipe_cluster | bool }}" # DANGER: DESTRUCTIVE.
argocd_force_clean_install: "{{ cold_start_stage_1_wipe_cluster | bool }}"

# --- Stage 2: Infrastructure Installation Variables ---
enable_raspberry_pi_config: "{{ cold_start_stage_2_install_infrastructure | bool }}"
update_rpi_firmware: "{{ cold_start_stage_2_install_infrastructure | bool }}"
enable_k3s_control_plane: "{{ cold_start_stage_2_install_infrastructure | bool }}"
enable_k3s_workers: "{{ cold_start_stage_2_install_infrastructure | bool }}"
enable_rook_ceph_part1: "{{ cold_start_stage_2_install_infrastructure | bool }}"

# --- Stage 3: Application Deployment Variables ---
# An application is enabled if the STAGE 3 master switch is ON, AND if its individual MANUAL switch is ON.
enable_argocd: "{{ cold_start_stage_3_install_applications | bool and manual_install_argocd | bool }}"
enable_metallb: "{{ cold_start_stage_3_install_applications | bool and manual_install_metallb | bool }}"
enable_argocd_svc: "{{ cold_start_stage_3_install_applications | bool and manual_install_argocd_svc | bool }}"
enable_rook_ceph_part2: "{{ cold_start_stage_3_install_applications | bool and manual_install_rook_ceph_part2 | bool }}"
enable_nfs_server: "{{ cold_start_stage_3_install_applications | bool and manual_install_nfs_server | bool }}"
enable_bedrock: "{{ cold_start_stage_3_install_applications | bool and manual_install_bedrock | bool }}"
enable_pihole: "{{ cold_start_stage_3_install_applications | bool and manual_install_pihole | bool }}"
enable_prometheus: "{{ cold_start_stage_3_install_applications | bool and manual_install_prometheus | bool }}"
enable_openwebui: "{{ cold_start_stage_3_install_applications | bool and manual_install_openwebui | bool }}"
enable_n8n: "{{ cold_start_stage_3_install_applications | bool and manual_install_n8n | bool }}"
enable_plex: "{{ cold_start_stage_3_install_applications | bool and manual_install_plex | bool }}"