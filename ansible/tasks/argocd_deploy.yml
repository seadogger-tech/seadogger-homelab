---
    # Step 1: Set KUBECONFIG globally
    - name: Set KUBECONFIG global
      ansible.builtin.set_fact:
        KUBECONFIG: /etc/rancher/k3s/k3s.yaml

    # Step 2: Clean up existing ArgoCD namespace (this will remove everything, including Helm releases)
    - name: Delete ArgoCD namespace if it exists
      ansible.builtin.k8s:
        kubeconfig: "{{ KUBECONFIG }}"
        state: absent
        definition:
          apiVersion: v1
          kind: Namespace
          metadata:
            name: argocd
      become: true

    # Step 3: Wait for namespace deletion
    - name: Wait for namespace deletion
      ansible.builtin.pause:
        seconds: 30

    # Step 4: Add the ArgoCD Helm repository
    - name: Add ArgoCD Helm repository
      ansible.builtin.shell:
        cmd: helm repo add argo https://argoproj.github.io/argo-helm
      environment:
        KUBECONFIG: "{{ KUBECONFIG }}"
      become: true

    # Step 5: Update Helm repositories
    - name: Update Helm repositories
      ansible.builtin.shell:
        cmd: helm repo update
      environment:
        KUBECONFIG: "{{ KUBECONFIG }}"
      become: true

    # Step 6: Download and modify the values.yaml to enable insecure mode
    - name: Download ArgoCD values.yaml from Helm repository
      ansible.builtin.shell:
        cmd: helm show values argo/argo-cd > /tmp/argocd-values.yaml
      environment:
        KUBECONFIG: "{{ KUBECONFIG }}"
      become: true

    - name: Enable insecure mode in ArgoCD values.yaml
      ansible.builtin.lineinfile:
        path: /tmp/argocd-values.yaml
        regexp: '^#?insecure:.*'
        line: 'insecure: true'
      become: true

    # Step 7: Install ArgoCD using Helm with the updated values.yaml
    - name: Install ArgoCD using Helm with custom values
      ansible.builtin.shell:
        cmd: helm install argocd argo/argo-cd --namespace argocd --create-namespace -f /tmp/argocd-values.yaml
      environment:
        KUBECONFIG: "{{ KUBECONFIG }}"
      become: true

    # Step 8: Wait for ArgoCD pods to be running
    - name: Wait for ArgoCD pods to be running
      ansible.builtin.shell:
        cmd: |
          while [[ $(kubectl get pods -n argocd -l app.kubernetes.io/name=argocd-server -o 'jsonpath={.items[?(@.status.phase!="Running")].metadata.name}' | wc -w) -gt 0 ]]; do
            echo "Waiting for ArgoCD pods to be running..."
            sleep 5
          done
      become: true