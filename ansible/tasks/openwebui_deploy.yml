---
# Step 1: Set KUBECONFIG globally
- name: Set KUBECONFIG global
  ansible.builtin.set_fact:
    KUBECONFIG: /etc/rancher/k3s/k3s.yaml

# Step 2: Create ArgoCD OpenWebUI Application
- name: Create OpenWebUI ArgoCD Application
  ansible.builtin.k8s:
    kubeconfig: "{{ KUBECONFIG }}"
    state: present
    definition:
      apiVersion: argoproj.io/v1alpha1
      kind: Application
      metadata:
        name: openwebui
        namespace: argocd
      spec:
        project: default
        source:
          repoURL: https://open-webui.github.io/helm-charts
          chart: open-webui
          targetRevision: "7.6.0"
          helm:
              valueFiles:
                - https://raw.githubusercontent.com/seadogger/seadogger-homelab/master/deployments/openwebui/openwebui-values.yaml
        destination:
          server: https://kubernetes.default.svc
          namespace: openwebui
        syncPolicy:
          automated:
            prune: true
            selfHeal: true
          syncOptions:
            - CreateNamespace=true

# Step 3: Wait for OpenWebUI pods to be ready using signal-based validation
- name: Wait for OpenWebUI pods to be ready
  kubernetes.core.k8s_info:
    kubeconfig: "{{ KUBECONFIG }}"
    kind: Pod
    namespace: openwebui
  register: openwebui_pods
  retries: 30
  delay: 10
  until: openwebui_pods.resources | selectattr('status.phase', 'equalto', 'Running') | list | length > 0
  changed_when: false

- name: Download OpenWebUI IngressRoutes manifest from GitHub
  ansible.builtin.get_url:
    url: "https://raw.githubusercontent.com/seadogger/seadogger-homelab/master/deployments/traefik/traefik-openwebui-ingress.yml"
    dest: "/tmp/traefik-openwebui-ingress.yml"
    mode: "0644"

- name: Apply OpenWebUI IngressRoutes (no Helm/Argo)
  kubernetes.core.k8s:
    kubeconfig: "{{ KUBECONFIG }}"
    state: present
    src: "/tmp/traefik-openwebui-ingress.yml"
