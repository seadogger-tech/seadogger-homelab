---
# Step 1: Set KUBECONFIG globally
- name: Set KUBECONFIG global
  ansible.builtin.set_fact:
    KUBECONFIG: /etc/rancher/k3s/k3s.yaml

- name: Add ArgoCD Helm repository
  kubernetes.core.helm_repository:
    name: argo
    repo_url: "https://argoproj.github.io/argo-helm"
    state: present
    kubeconfig: "{{ KUBECONFIG }}"

- name: Create ArgoCD namespace
  kubernetes.core.k8s:
    name: argocd
    api_version: v1
    kind: Namespace
    state: present
    kubeconfig: "{{ KUBECONFIG }}"

- name: Deploy ArgoCD with Helm
  kubernetes.core.helm:
    name: argocd
    chart_ref: argo/argo-cd
    release_namespace: argocd
    state: present
    kubeconfig: "{{ KUBECONFIG }}"

- name: Expose ArgoCD as a LoadBalancer service
  kubernetes.core.k8s:
    state: present
    kubeconfig: "{{ KUBECONFIG }}"
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        name: argocd-server
        namespace: argocd
      spec:
        type: LoadBalancer
        selector:
          app.kubernetes.io/name: argocd-server
        ports:
          - name: http
            port: 80
            protocol: TCP
            targetPort: 8080
          - name: https
            port: 443
            protocol: TCP
            targetPort: 8080
        loadBalancerIP: 192.168.1.247

- name: Expose Ceph dashboard via MetalLB at 192.168.1.248
  kubernetes.core.k8s:
    kubeconfig: "{{ KUBECONFIG }}"
    state: present
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        name: rook-ceph-mgr-dashboard-lb
        namespace: rook-ceph

      spec:
        type: LoadBalancer
        loadBalancerIP: 192.168.1.248
        selector:
          app: rook-ceph-mgr
        ports:
          - name: https
            port: 443
            targetPort: 8443   # 8443 if dashboard.ssl: true; use 8080 if ssl: false
            protocol: TCP

# Step 1.5: Create Traefik OpenWebUI Service ArgoCD Application
- name: Create Traefik Middleware
  ansible.builtin.k8s:
    kubeconfig: "{{ KUBECONFIG }}"
    state: present
    definition:
      apiVersion: argoproj.io/v1alpha1
      kind: Application
      metadata:
        name: traefik-openwebui-middleware
        namespace: argocd
      spec:
        project: default
        source:
          repoURL: https://github.com/seadogger/seadogger-homelab.git
          targetRevision: HEAD
          path: kubectl-deployments/traefik
          directory:
            include: traefik-middleware.yml
        destination:
          server: https://kubernetes.default.svc
          namespace: kube-system
        syncPolicy:
          automated:
            prune: true
            selfHeal: true