---
# Step 1: Set KUBECONFIG globally
- name: Set KUBECONFIG global
  ansible.builtin.set_fact:
    KUBECONFIG: /etc/rancher/k3s/k3s.yaml

# Step 2: Delete existing Prometheus namespace if it exists
- name: Delete existing Prometheus namespace
  ansible.builtin.k8s:
    kubeconfig: "{{ KUBECONFIG }}"
    state: absent
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: monitoring
  ignore_errors: true

# Step 3: Wait for namespace deletion
- name: Wait for namespace deletion
  ansible.builtin.pause:
    seconds: 30

# Step 4: Create new Prometheus namespace
- name: Create Prometheus namespace
  ansible.builtin.k8s:
    kubeconfig: "{{ KUBECONFIG }}"
    state: present
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: monitoring

# Step 5: Create ArgoCD Prometheus Application
- name: Create Prometheus ArgoCD Application
  ansible.builtin.k8s:
    kubeconfig: "{{ KUBECONFIG }}"
    state: present
    definition:
      apiVersion: argoproj.io/v1alpha1
      kind: Application
      metadata:
        name: prometheus
        namespace: argocd
      spec:
        project: default
        source:
          repoURL: https://prometheus-community.github.io/helm-charts
          chart: kube-prometheus-stack
          targetRevision: "68.4.4"
          helm:
            valueFiles:
              - https://raw.githubusercontent.com/seadogger/seadogger-homelab/master/helm-deployments/prometheus/prometheus-values.yaml
            skipCrds: false  # Ensure CRDs are installed
        destination:
          server: https://kubernetes.default.svc
          namespace: monitoring
        syncPolicy:
          automated:
            prune: true
            selfHeal: true
          syncOptions:
            - CreateNamespace=true
            - ServerSideApply=true  # Helps with CRD installation
            - Replace=true          # Ensures proper CRD updates
            - ApplyOutOfSyncOnly=false  # Force sync even if resources appear in sync

# Step 6: Wait for Prometheus deployment
- name: Wait for Prometheus deployment through ArgoCD
  ansible.builtin.pause:
    minutes: 1
  become: true