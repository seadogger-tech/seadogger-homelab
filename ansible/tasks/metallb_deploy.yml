---
# This playbook deploys MetalLB using ArgoCD

# Step 1: Set KUBECONFIG globally
- name: Set KUBECONFIG global
  ansible.builtin.set_fact:
    KUBECONFIG: /etc/rancher/k3s/k3s.yaml

# Step 2: Delete existing MetalLB namespace if it exists
- name: Delete existing MetalLB namespace
  ansible.builtin.k8s:
    kubeconfig: "{{ KUBECONFIG }}"
    state: absent
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: metallb-system
  ignore_errors: true

- name: Wait until MetalLB namespace is fully deleted
  vars:
    metallb_namespace: metallb-system
  block:
    - name: Poll for MetalLB namespace deletion
      community.kubernetes.k8s_info:
        kubeconfig: "{{ KUBECONFIG }}"
        kind: Namespace
        name: "{{ metallb_namespace }}"
      register: ns_info
      retries: 24
      delay: 5
      until: ns_info.resources | length == 0
      delegate_to: localhost

# Step 4: Create new MetalLB namespace
- name: Create MetalLB namespace
  ansible.builtin.k8s:
    kubeconfig: "{{ KUBECONFIG }}"
    state: present
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: metallb-system

# Step 5: Create ArgoCD MetalLB Application
- name: Create MetalLB ArgoCD Application
  ansible.builtin.k8s:
    kubeconfig: "{{ KUBECONFIG }}"
    state: present
    definition:
      apiVersion: argoproj.io/v1alpha1
      kind: Application
      metadata:
        name: metallb
        namespace: argocd
      spec:
        project: default
        source:
          repoURL: https://metallb.github.io/metallb
          chart: metallb
          targetRevision: "*"
          helm:
            valueFiles:
              - https://raw.githubusercontent.com/seadogger/seadogger-homelab/master/helm-deployments/metallb/metallb-values.yaml
        destination:
          server: https://kubernetes.default.svc
          namespace: metallb-system
        syncPolicy:
          automated:
            prune: true
            selfHeal: true
          syncOptions:
            - CreateNamespace=true

# Step 6: Create ArgoCD Application for MetalLB IP Configuration
- name: Create MetalLB IP Pool ArgoCD Application
  ansible.builtin.k8s:
    kubeconfig: "{{ KUBECONFIG }}"
    state: present
    definition:
      apiVersion: argoproj.io/v1alpha1
      kind: Application
      metadata:
        name: metallb-config
        namespace: argocd
      spec:
        project: default
        source:
          repoURL: https://github.com/seadogger/seadogger-homelab
          path: helm-deployments/metallb  # Ensure this path contains the metallb-values.yaml file as a manifest
          targetRevision: HEAD
        destination:
          server: https://kubernetes.default.svc
          namespace: metallb-system
        syncPolicy:
          automated:
            prune: true
            selfHeal: true
          syncOptions:
            - CreateNamespace=true

# Step 7: Wait for MetalLB pods to be ready
- name: Wait for MetalLB pods to be ready
  community.kubernetes.k8s_info:
    kubeconfig: "{{ KUBECONFIG }}"
    kind: Pod
    namespace: metallb-system
  register: metallb_pods
  retries: 24
  delay: 10
  until: metallb_pods.resources | selectattr('status.phase', 'equalto', 'Running') | list | length > 0