- name: Check if we should wipe K3s cluster
  ansible.builtin.fail:
    msg: "Wipe K3s cluster is disabled in config.yml. Set 'enable_wipe_k3s_cluster: true' to run."
  when: not enable_wipe_k3s_cluster | default(false)

- name: "STAGE 0: Graceful Application and Infrastructure Teardown"
  block:
    - name: "Clean up all POD Design Pattern Applications"
      import_tasks: tasks/cleanup_pods.yml
      vars:
        run_pod_cleanup: true

    - name: "Clean up Prometheus Hybrid Application"
      import_tasks: tasks/cleanup_prometheus.yml
      vars:
        run_prometheus_cleanup: true

    - name: "Clean up all Infrastructure Services"
      import_tasks: tasks/cleanup_infrastructure.yml
      vars:
        run_infrastructure_cleanup: true
        infrastructure_cleanup_list: ["metallb", "rook-ceph"]

- name: Ensure iptables is installed
  ansible.builtin.apt:
    name: iptables
    state: present
    update_cache: yes
  become: true

- name: Stop k3s-agent on worker nodes
  ansible.builtin.systemd:
    name: k3s-agent
    state: stopped
  when: inventory_hostname in groups['nodes']
  ignore_errors: true

- name: Stop k3s on control plane
  ansible.builtin.systemd:
    name: k3s
    state: stopped
  when: inventory_hostname in groups['control_plane']
  ignore_errors: true

- name: Kill Rook and Ceph processes
  ansible.builtin.shell: |
    pkill -9 -f rook || true
    pkill -9 -f ceph || true
  changed_when: false
  ignore_errors: true

- name: Uninstall k3s agent if present
  ansible.builtin.command:
    cmd: /usr/local/bin/k3s-agent-uninstall.sh
  ignore_errors: true

- name: Uninstall k3s if present
  ansible.builtin.command:
    cmd: /usr/local/bin/k3s-uninstall.sh
  ignore_errors: true

- name: Clean Kubernetes and storage directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  loop:
    - /etc/rancher
    - /var/lib/rancher
    - /var/lib/kubelet
    - /var/lib/rook
    - /var/lib/longhorn
    - /var/lib/ceph
    - /var/log/containers
    - /var/log/pods
    - /var/log/ceph
    - /opt/rook
    - /opt/ceph
    - /root/.kube
    - /var/lib/cni
    - /etc/cni
    - /run/containerd
    - /var/lib/containerd

- name: Remove sysctl config for Kubernetes CRI
  ansible.builtin.file:
    path: /etc/sysctl.d/99-kubernetes-cri.conf
    state: absent

- name: Delete CNI network interfaces if they exist
  ansible.builtin.shell: |
    ip link delete cni0 2>/dev/null || true
    ip link delete flannel.1 2>/dev/null || true
    ip link delete ceph0 2>/dev/null || true
  no_log: true

- name: Flush all iptables rules and set default policies to ACCEPT
  ansible.builtin.shell: |
    iptables -F
    iptables -X
    iptables -t nat -F
    iptables -t nat -X
    iptables -t mangle -F
    iptables -t mangle -X
    iptables -P INPUT ACCEPT
    iptables -P FORWARD ACCEPT
    iptables -P OUTPUT ACCEPT

- name: "!!! DANGER ZONE: WIPE CEPH STORAGE PARTITION !!!"
  block:
    - name: "Wipe filesystem signatures from Ceph partition (nvme0n1p3)"
      ansible.builtin.command: wipefs -af /dev/nvme0n1p3
      changed_when: true
      ignore_errors: true

    - name: "Verify Ceph partition is clean"
      ansible.builtin.command: lsblk -f /dev/nvme0n1p3
      register: partition_check
      changed_when: false

    - name: "Fail if Ceph partition still has a filesystem"
      ansible.builtin.fail:
        msg: "Partition /dev/nvme0n1p3 is not clean. Filesystem or label found: {{ partition_check.stdout_lines }}"
      when: partition_check.stdout | length > 0 and 'nvme0n1p3' in partition_check.stdout
  when: perform_physical_disk_wipe | default(false)

- name: Remove all device mapper devices
  ansible.builtin.shell: dmsetup remove_all
  no_log: true
  ignore_errors: true

- name: Remove Ceph device mapper entries
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  loop:
    - /dev/mapper/ceph-*
    - /dev/ceph-*
  ignore_errors: true

- name: Unmount kubelet pods and rook directories
  ansible.builtin.shell: |
    umount -f /var/lib/kubelet/pods/* || true
    umount -f /var/lib/rook/* || true
  no_log: true

- name: Remove systemd service override files for k3s and containerd
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  loop:
    - /etc/systemd/system/k3s*
    - /etc/systemd/system/containerd*

- name: Reload systemd daemon
  ansible.builtin.systemd:
    daemon_reload: yes

- name: Remove module load configuration files
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  loop:
    - /etc/modules-load.d/k3s.conf
    - /etc/modules-load.d/rook-ceph.conf

- name: Restart systemd-networkd service
  ansible.builtin.systemd:
    name: systemd-networkd
    state: restarted
  ignore_errors: true

- name: Remove all container runtime pods
  ansible.builtin.shell: crictl rm $(crictl ps -aq)
  no_log: true
  ignore_errors: true

- name: Remove all container runtime images
  ansible.builtin.shell: crictl rmi $(crictl images -q)
  no_log: true
  ignore_errors: true

- name: Verify cleanup - storage device
  block:
    - name: Try to read storage device state
      ansible.builtin.shell: lsblk -f /dev/nvme0n1p3
      register: storage_output
      ignore_errors: true

    - name: Display storage device state
      ansible.builtin.debug:
        msg: "{{ storage_output.stdout_lines | default(['Device not found or inaccessible']) }}"
