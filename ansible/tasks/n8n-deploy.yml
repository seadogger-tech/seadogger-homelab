- name: Set KUBECONFIG global
  ansible.builtin.set_fact:
    KUBECONFIG: /etc/rancher/k3s/k3s.yaml
  tags: n8n

- name: Delete existing n8n namespace
  kubernetes.core.k8s:
    kubeconfig: "{{ KUBECONFIG }}"
    state: absent
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: n8n
  ignore_errors: true
  tags: n8n

- name: Wait for namespace deletion
  ansible.builtin.pause:
    seconds: 15
  tags: n8n

- name: Create n8n namespace
  kubernetes.core.k8s:
    kubeconfig: "{{ KUBECONFIG }}"
    state: present
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: n8n
  tags: n8n

- name: Create n8n ArgoCD Application
  kubernetes.core.k8s:
    kubeconfig: "{{ KUBECONFIG }}"
    state: present
    definition:
      apiVersion: argoproj.io/v1alpha1
      kind: Application
      metadata:
        name: n8n
        namespace: argocd
      spec:
        project: default
        source:
          repoURL: https://community-charts.github.io/helm-charts
          chart: n8n
          targetRevision: "1.13.5"
          helm:
            valueFiles:
              - https://raw.githubusercontent.com/seadogger/seadogger-homelab/master/helm-deployments/n8n/n8n-values.yaml
        destination:
          server: https://kubernetes.default.svc
          namespace: n8n
        syncPolicy:
          automated:
            prune: true
            selfHeal: true
          syncOptions:
            - CreateNamespace=true
  tags: n8n

- name: Wait for n8n deployment via ArgoCD
  ansible.builtin.pause:
    seconds: 30
  become: true
  tags: n8n

# Add this new task to set the environment variable correctly
#.TODO:  this is a hack as the ENV setup in the values file is broken.   
- name: Set N8N_SECURE_COOKIE environment variable
  ansible.builtin.shell:
    cmd: >-
      kubectl patch deployment n8n -n n8n --type=json 
      -p '[{"op":"add","path":"/spec/template/spec/containers/0/env/-","value":{"name":"N8N_SECURE_COOKIE","value":"false"}}]'
  become: true
  tags: n8n


- name: Create n8n LoadBalancer Service
  kubernetes.core.k8s:
    kubeconfig: "{{ KUBECONFIG }}"
    state: present
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        name: n8n
        namespace: n8n
        annotations:
          metallb.universe.tf/address-pool: default
          metallb.universe.tf/allow-shared-ip: n8n
          metallb.universe.tf/ip-allocated-from-pool: default
      spec:
        type: LoadBalancer
        ports:
          - name: http
            port: 80
            targetPort: 5678
            protocol: TCP
        selector:
          app.kubernetes.io/instance: n8n
          app.kubernetes.io/name: n8n
        allocateLoadBalancerNodePorts: true
        externalTrafficPolicy: Cluster
        loadBalancerIP: "192.168.1.252"
  become: true
  tags: n8n