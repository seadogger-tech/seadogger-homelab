---
# Step 1: Set KUBECONFIG globally  
- name: Set KUBECONFIG global
  ansible.builtin.set_fact:
    KUBECONFIG: /etc/rancher/k3s/k3s.yaml

# Step 2: Create Plex claim secret
- name: Create Plex claim secret
  ansible.builtin.k8s:
    kubeconfig: "{{ KUBECONFIG }}"
    state: present
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: plex-claim-secret
        namespace: plex
      type: Opaque
      stringData:
        claim: "{{ plex_access_key }}"

# Step 3: Create ArgoCD Plex Application
- name: Create Plex ArgoCD Application
  ansible.builtin.k8s:
    kubeconfig: "{{ KUBECONFIG }}"
    state: present
    definition:
      apiVersion: argoproj.io/v1alpha1
      kind: Application
      metadata:
        name: plex
        namespace: argocd
      spec:
        project: default
        source:
          repoURL: https://raw.githubusercontent.com/plexinc/pms-docker/gh-pages
          chart: plex-media-server
          targetRevision: "*"
          helm:
            valueFiles:
              - https://raw.githubusercontent.com/seadogger/seadogger-homelab/master/deployments/plex/plex-values.yaml
        destination:
          server: https://kubernetes.default.svc
          namespace: plex
        syncPolicy:
          automated:
            prune: true
            selfHeal: true
          syncOptions:
            - CreateNamespace=true

# Step 4: Wait for Plex application to be healthy
- name: Wait for Plex application to be healthy
  kubernetes.core.k8s_info:
    api_version: argoproj.io/v1alpha1
    kind: Application
    name: plex
    namespace: argocd
    kubeconfig: "{{ KUBECONFIG }}"
  register: plex_status
  until: plex_status.resources is defined and
         plex_status.resources[0].status.health.status is defined and
         plex_status.resources[0].status.health.status == "Healthy"
  retries: 30
  delay: 10

- name: Download plex IngressRoutes manifest from GitHub
  ansible.builtin.get_url:
    url: "https://raw.githubusercontent.com/seadogger/seadogger-homelab/master/deployments/traefik/traefik-plex-ingress.yml"
    dest: "/tmp/traefik-plex-ingress.yml"
    mode: "0644"

- name: Apply nplex IngressRoutes (no Helm/Argo)
  kubernetes.core.k8s:
    kubeconfig: "{{ KUBECONFIG }}"
    state: present
    src: "/tmp/traefik-plex-ingress.yml"
