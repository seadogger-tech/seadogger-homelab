---
# Step 1: Set KUBECONFIG globally  
- name: Set KUBECONFIG global
  ansible.builtin.set_fact:
    KUBECONFIG: /etc/rancher/k3s/k3s.yaml

# Step 2: Delete existing Plex namespace if it exists
- name: Delete existing Plex namespace
  ansible.builtin.k8s:
    kubeconfig: "{{ KUBECONFIG }}"
    state: absent
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: plex
  ignore_errors: true

# Step 3: Wait for Plex namespace to terminate
- name: Wait for Plex namespace to terminate
  ansible.builtin.wait_for:
    path: /tmp/namespace_deleted_check
    timeout: 300
  delegate_to: localhost
  until: >
    lookup('community.kubernetes.k8s', api_version='v1', kind='Namespace',
           resource_name='plex', kubeconfig=KUBECONFIG, fail_on_missing=False) is none
  retries: 30
  delay: 10

# Step 4: Create new Plex namespace
- name: Create Plex namespace
  ansible.builtin.k8s:
    kubeconfig: "{{ KUBECONFIG }}"
    state: present
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: plex

# Step 5: Create Plex claim secret
- name: Create Plex claim secret
  ansible.builtin.k8s:
    kubeconfig: "{{ KUBECONFIG }}"
    state: present
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: plex-claim-secret
        namespace: plex
      type: Opaque
      stringData:
        claim: "{{ plex_access_key }}"

# Step 6: Create ArgoCD Plex Application
- name: Create Plex ArgoCD Application
  ansible.builtin.k8s:
    kubeconfig: "{{ KUBECONFIG }}"
    state: present
    definition:
      apiVersion: argoproj.io/v1alpha1
      kind: Application
      metadata:
        name: plex
        namespace: argocd
      spec:
        project: default
        source:
          repoURL: https://raw.githubusercontent.com/plexinc/pms-docker/gh-pages
          chart: plex-media-server
          targetRevision: "*"
          helm:
            valueFiles:
              - https://raw.githubusercontent.com/seadogger/seadogger-homelab/master/helm-deployments/plex/plex-values.yaml
        destination:
          server: https://kubernetes.default.svc
          namespace: plex
        syncPolicy:
          automated:
            prune: true
            selfHeal: true
          syncOptions:
            - CreateNamespace=true

# Step 7: Wait for Plex application to be healthy
- name: Wait for Plex application to be healthy
  ansible.builtin.command:
    cmd: >
      kubectl --kubeconfig {{ KUBECONFIG }} -n argocd get application plex
      -o jsonpath='{.status.health.status}'
  register: plex_status
  until: plex_status.stdout == "Healthy"
  retries: 30
  delay: 10