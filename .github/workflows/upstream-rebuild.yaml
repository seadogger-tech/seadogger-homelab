name: Rebuild from aws-samples on change

on:
  schedule:
    - cron: "0 */6 * * *"   # every 6 hours
  workflow_dispatch:        # allow manual run

permissions:
  contents: write           # commit .github/upstream_sha
  packages: write           # push to GHCR

concurrency:
  group: upstream-rebuild-bedrock
  cancel-in-progress: true

env:
  IMAGE: ghcr.io/seadogger-tech/aws-bedrock-gateway

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      # Checkout this repo (to read/write .github/upstream_sha)
      - name: Checkout this repo (master)
        uses: actions/checkout@v4
        with:
          ref: master          # change to 'main' if needed
          fetch-depth: 0

      # Checkout upstream repo (default branch)
      - name: Checkout upstream aws-samples/bedrock-access-gateway
        uses: actions/checkout@v4
        with:
          repository: aws-samples/bedrock-access-gateway
          path: upstream
          fetch-depth: 1

      - name: Compute upstream SHA
        id: sha
        run: |
          NEW_SHA=$(git -C upstream rev-parse HEAD)
          SHORT=$(git -C upstream rev-parse --short HEAD)
          echo "new_sha=$NEW_SHA"   >> "$GITHUB_OUTPUT"
          echo "short_sha=$SHORT"   >> "$GITHUB_OUTPUT"
          echo "Upstream SHA: $NEW_SHA"

      - name: Load last built SHA (if any)
        id: last
        run: |
          if [[ -f ".github/upstream_sha" ]]; then
            echo "last_sha=$(cat .github/upstream_sha)" >> "$GITHUB_OUTPUT"
          else
            echo "last_sha=" >> "$GITHUB_OUTPUT"
          fi

      - name: Decide if changed
        id: changed
        run: |
          if [[ "${{ steps.sha.outputs.new_sha }}" == "${{ steps.last.outputs.last_sha }}" ]]; then
            echo "changed=false" >> "$GITHUB_OUTPUT"
            echo "No upstream change; skipping build."
          else
            echo "changed=true"  >> "$GITHUB_OUTPUT"
            echo "Upstream changed to ${{ steps.sha.outputs.new_sha }}; buildingâ€¦"
          fi

      - name: Setup QEMU (for multi-arch emulation)
        if: steps.changed.outputs.changed == 'true'
        uses: docker/setup-qemu-action@v3

      - name: Setup Buildx
        if: steps.changed.outputs.changed == 'true'
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        if: steps.changed.outputs.changed == 'true'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push (amd64 + arm64)
        if: steps.changed.outputs.changed == 'true'
        uses: docker/build-push-action@v6
        with:
          context: ./upstream/src
          file: ./upstream/src/Dockerfile_ecs
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ env.IMAGE }}:latest
            ${{ env.IMAGE }}:sha-${{ steps.sha.outputs.short_sha }}
          labels: |
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.description=Auto-built from aws-samples/bedrock-access-gateway@${{ steps.sha.outputs.new_sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Save upstream SHA for next run
        if: steps.changed.outputs.changed == 'true'
        run: |
          echo "${{ steps.sha.outputs.new_sha }}" > .github/upstream_sha
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add .github/upstream_sha
          git commit -m "ci(upstream): ${{ steps.sha.outputs.new_sha }}"
          git push
